{"version":3,"file":"static/js/54.1fb46e38.chunk.js","mappings":"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","sources":["pages/Orders.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { db } from '../firebase';\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  getDocs,\r\n  updateDoc,\r\n  doc,\r\n} from 'firebase/firestore';\r\nimport Navbar from '../components/Navbar';  // Import the Navbar component\r\n\r\nconst Orders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const auth = getAuth();\r\n  const user = auth.currentUser;\r\n\r\n  const fetchOrders = async () => {\r\n    if (!user) return; // Return if no user is logged in\r\n    setLoading(true);\r\n    try {\r\n      // Query to fetch orders, using 'vendorid' as the correct field\r\n      const q = query(\r\n        collection(db, 'placeorder'), // Target the 'placeorder' collection\r\n        where('vendorid', '==', user.uid) // Ensure the vendorid matches the current user's uid\r\n      );\r\n\r\n      // Fetch orders using the query\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      const results = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n\r\n      console.log('Orders fetched:', results);\r\n\r\n      if (results.length === 0) {\r\n        console.log(\"No orders found.\");\r\n      }\r\n\r\n      setOrders(results);\r\n    } catch (err) {\r\n      console.error('Error fetching orders:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateStatus = async (orderId, status) => {\r\n    try {\r\n      const orderRef = doc(db, 'placeorder', orderId);\r\n      await updateDoc(orderRef, { status });\r\n      setOrders((prev) =>\r\n        prev.map((order) =>\r\n          order.id === orderId ? { ...order, status } : order\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error(`Failed to update order status to ${status}:`, err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, [user]);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <Navbar />  {/* Add the Navbar here */}\r\n      <h2 style={styles.header}>Received Orders</h2>\r\n      {loading ? (\r\n        <p>Loading orders...</p>\r\n      ) : orders.length === 0 ? (\r\n        <p>No orders received.</p>\r\n      ) : (\r\n        <div style={styles.ordersList}>\r\n          {orders.map((order) => (\r\n            <div key={order.id} style={styles.orderCard}>\r\n              <p><strong>Name:</strong> {order.name}</p>\r\n              <p><strong>Mobile Number:</strong> {order.mobilenumber}</p>\r\n              <p><strong>Location:</strong> {order.location}</p>\r\n              <p><strong>Date of Event:</strong> {order.dateofevent}</p> {/* Displaying date of event */}\r\n              <p><strong>Status:</strong> {order.status || 'Pending'}</p>\r\n              <div style={styles.buttonGroup}>\r\n                <button\r\n                  style={{ ...styles.button, backgroundColor: '#4caf50' }}\r\n                  onClick={() => handleUpdateStatus(order.id, 'Accepted')}\r\n                  disabled={order.status === 'Accepted'}\r\n                >\r\n                  Accept\r\n                </button>\r\n                <button\r\n                  style={{ ...styles.button, backgroundColor: '#f44336' }}\r\n                  onClick={() => handleUpdateStatus(order.id, 'Rejected')}\r\n                  disabled={order.status === 'Rejected'}\r\n                >\r\n                  Reject\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Inline CSS styles\r\nconst styles = {\r\n  container: {\r\n    padding: '1rem',\r\n    margin: '0 auto',\r\n  },\r\n  header: {\r\n    fontSize: '1.8rem',\r\n    marginBottom: '1rem',\r\n    color: '#003f66',\r\n  },\r\n  ordersList: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '1rem',\r\n  },\r\n  orderCard: {\r\n    padding: '1rem',\r\n    backgroundColor: '#f1f1f1',\r\n    borderRadius: '8px',\r\n    boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\r\n  },\r\n  buttonGroup: {\r\n    display: 'flex',\r\n    gap: '0.5rem',\r\n    marginTop: '0.75rem',\r\n  },\r\n  button: {\r\n    padding: '0.5rem 1rem',\r\n    border: 'none',\r\n    color: '#fff',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default Orders;\r\n"],"names":["styles","container","padding","margin","header","fontSize","marginBottom","color","ordersList","display","flexDirection","gap","orderCard","backgroundColor","borderRadius","boxShadow","buttonGroup","marginTop","button","border","cursor","Orders","orders","setOrders","useState","loading","setLoading","user","getAuth","currentUser","handleUpdateStatus","async","orderId","status","orderRef","doc","db","updateDoc","prev","map","order","id","err","console","error","useEffect","q","query","collection","where","uid","results","getDocs","docs","data","log","length","fetchOrders","_jsxs","style","children","_jsx","Navbar","name","mobilenumber","location","dateofevent","onClick","disabled"],"sourceRoot":""}