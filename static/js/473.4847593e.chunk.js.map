{"version":3,"file":"static/js/473.4847593e.chunk.js","mappings":"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","sources":["pages/PostOrder.js","components/Navbar.js"],"sourcesContent":["// src/pages/PostOrder.jsx\nimport React, { useState } from 'react';\nimport { db, storage } from '../firebase';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from '../components/Navbar';\n\nconst categories = [\n  'Photography', 'Food', 'Music', 'Catering', 'Venue', 'Return Gift',\n  'Travel', 'DJ', 'Cakes & Bakery', 'Decoration', 'Orchestra',\n  'Wedding', 'Beautician', 'Other'\n];\n\nconst PostOrder = () => {\n  const [businessname, setBusinessname] = useState('');\n  const [description, setDescription] = useState('');\n  const [eventname, setEventname] = useState(categories[0]);\n  const [experience, setExperience] = useState('');\n  const [from, setFrom] = useState('');\n  const [hours, setHours] = useState('');\n  const [location, setLocation] = useState('');\n  const [mobilenumber, setMobilenumber] = useState('');\n  const [name, setName] = useState('');\n  const [minPrice, setMinPrice] = useState('');\n  const [maxPrice, setMaxPrice] = useState('');\n  const [image, setImage] = useState(null);\n  const [menuImages, setMenuImages] = useState([]);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [menuImagePreviews, setMenuImagePreviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const navigate = useNavigate();\n  const user = getAuth().currentUser;\n\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setImage(file);\n      setImagePreview(URL.createObjectURL(file));\n    }\n  };\n\n  const handleMenuImageChange = e => {\n    const files = Array.from(e.target.files);\n    if (files.length) {\n      setMenuImages(files);\n      setMenuImagePreviews(files.map(f => URL.createObjectURL(f)));\n    }\n  };\n\n  const removeMainImage = () => {\n    setImage(null);\n    setImagePreview(null);\n  };\n\n  const removeMenuImage = index => {\n    const imgs = [...menuImages];\n    imgs.splice(index, 1);\n    setMenuImages(imgs);\n\n    const previews = [...menuImagePreviews];\n    previews.splice(index, 1);\n    setMenuImagePreviews(previews);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!image || !menuImages.length) {\n      return alert('Please select a main image and at least one menu image.');\n    }\n    setLoading(true);\n    try {\n      const mainRef = ref(storage, `users/${user.uid}/${Date.now()}-${image.name}`);\n      await uploadBytes(mainRef, image);\n      const mainURL = await getDownloadURL(mainRef);\n\n      const menuURLs = await Promise.all(\n        menuImages.map(async file => {\n          const mRef = ref(storage, `users/${user.uid}/${Date.now()}-${file.name}`);\n          await uploadBytes(mRef, file);\n          return getDownloadURL(mRef);\n        })\n      );\n\n      await addDoc(collection(db, 'postorder'), {\n        businessname,\n        description,\n        eventname,\n        experience,\n        from,\n        hours,\n        image: mainURL,\n        location,\n        menu: menuURLs,\n        mobilenumber,\n        name,\n        vendorid: user.uid,\n        minprice: minPrice,\n        maxprice: maxPrice\n      });\n\n      alert('Service posted successfully!');\n      navigate('/home');\n    } catch (err) {\n      console.error(err);\n      alert('Error posting service. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={styles.pageWrapper}>\n      <Navbar />\n      <div style={styles.card}>\n        <h1 style={styles.title}>Post Your Service</h1>\n        <form onSubmit={handleSubmit} style={styles.form}>\n          <div style={styles.row}>\n            <input\n              style={styles.input}\n              type=\"text\"\n              placeholder=\"Business Name\"\n              value={businessname}\n              onChange={e => setBusinessname(e.target.value)}\n              required\n            />\n            <select\n              style={styles.select}\n              value={eventname}\n              onChange={e => setEventname(e.target.value)}\n              required\n            >\n              {categories.map(cat => (\n                <option key={cat} value={cat}>{cat}</option>\n              ))}\n            </select>\n          </div>\n          <textarea\n            style={styles.textarea}\n            placeholder=\"Description\"\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n            required\n          />\n          <div style={styles.row}>\n            <input\n              style={styles.input}\n              type=\"number\"\n              placeholder=\"Experience (years)\"\n              value={experience}\n              onChange={e => setExperience(e.target.value)}\n              required\n            />\n            <input\n              style={styles.input}\n              type=\"text\"\n              placeholder=\"Location\"\n              value={location}\n              onChange={e => setLocation(e.target.value)}\n              required\n            />\n          </div>\n          <div style={styles.row}>\n            <input\n              style={styles.input}\n              type=\"text\"\n              placeholder=\"Working Hours\"\n              value={hours}\n              onChange={e => setHours(e.target.value)}\n              required\n            />\n            <input\n              style={styles.input}\n              type=\"date\"\n              value={from}\n              onChange={e => setFrom(e.target.value)}\n              required\n            />\n          </div>\n          <div style={styles.row}>\n            <input\n              style={styles.input}\n              type=\"tel\"\n              placeholder=\"Mobile Number\"\n              value={mobilenumber}\n              onChange={e => setMobilenumber(e.target.value)}\n              required\n            />\n            <input\n              style={styles.input}\n              type=\"text\"\n              placeholder=\"Your Name\"\n              value={name}\n              onChange={e => setName(e.target.value)}\n              required\n            />\n          </div>\n          <div style={styles.row}>\n            <input\n              style={styles.input}\n              type=\"number\"\n              placeholder=\"Minimum Price\"\n              value={minPrice}\n              onChange={e => setMinPrice(e.target.value)}\n              required\n            />\n            <input\n              style={styles.input}\n              type=\"number\"\n              placeholder=\"Maximum Price\"\n              value={maxPrice}\n              onChange={e => setMaxPrice(e.target.value)}\n              required\n            />\n          </div>\n\n          <label style={styles.fileLabel}>\n            Main Image *\n            <input\n              style={styles.fileInput}\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleImageChange}\n              required\n            />\n            {imagePreview && (\n              <div style={styles.previewContainer}>\n                <img src={imagePreview} alt=\"Main Preview\" style={styles.imagePreview} />\n                <span onClick={removeMainImage} style={styles.removeButton}>×</span>\n              </div>\n            )}\n          </label>\n\n          <label style={styles.fileLabel}>\n            Menu Images * (multiple)\n            <input\n              style={styles.fileInput}\n              type=\"file\"\n              accept=\"image/*\"\n              multiple\n              onChange={handleMenuImageChange}\n              required\n            />\n            <div style={styles.menuImagePreviewContainer}>\n              {menuImagePreviews.map((preview, idx) => (\n                <div key={idx} style={styles.previewContainer}>\n                  <img src={preview} alt={`Menu Preview ${idx + 1}`} style={styles.imagePreview} />\n                  <span onClick={() => removeMenuImage(idx)} style={styles.removeButton}>×</span>\n                </div>\n              ))}\n            </div>\n          </label>\n\n          <button style={styles.submitButton} disabled={loading}>\n            {loading ? 'Posting…' : 'Post Service'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  pageWrapper: {\n    backgroundColor: '#003f66',\n    minHeight: '100vh',\n    paddingBottom: '40px',\n  },\n  card: {\n    maxWidth: '800px',\n    margin: '40px auto',\n    backgroundColor: '#ffffff',\n    borderRadius: '12px',\n    padding: '30px',\n    boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n    color: '#003f66',\n  },\n  title: {\n    textAlign: 'center',\n    marginBottom: '24px',\n    fontSize: '28px',\n    fontWeight: '700',\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '16px',\n  },\n  row: {\n    display: 'flex',\n    gap: '16px',\n    flexWrap: 'wrap',\n  },\n  input: {\n    flex: 1,\n    padding: '12px',\n    borderRadius: '6px',\n    border: '1px solid #ccc',\n    fontSize: '16px',\n  },\n  select: {\n    flex: 1,\n    padding: '12px',\n    borderRadius: '6px',\n    border: '1px solid #ccc',\n    fontSize: '16px',\n    backgroundColor: '#f9f9f9',\n  },\n  textarea: {\n    padding: '12px',\n    borderRadius: '6px',\n    border: '1px solid #ccc',\n    resize: 'vertical',\n    minHeight: '100px',\n    fontSize: '16px',\n  },\n  fileLabel: {\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: '14px',\n    color: '#555',\n  },\n  fileInput: {\n    marginTop: '8px',\n  },\n  previewContainer: {\n    position: 'relative',\n    display: 'inline-block',\n    marginTop: '10px',\n  },\n  imagePreview: {\n    width: '150px',\n    height: 'auto',\n    borderRadius: '8px',\n    objectFit: 'cover',\n  },\n  removeButton: {\n    position: 'absolute',\n    top: '0',\n    right: '0',\n    backgroundColor: 'rgba(121,112,112,0.7)',\n    color: '#fff',\n    borderRadius: '50%',\n    width: '20px',\n    height: '20px',\n    textAlign: 'center',\n    lineHeight: '20px',\n    cursor: 'pointer',\n  },\n  menuImagePreviewContainer: {\n    display: 'flex',\n    gap: '10px',\n    marginTop: '10px',\n    flexWrap: 'wrap',\n  },\n  submitButton: {\n    marginTop: '16px',\n    padding: '14px',\n    backgroundColor: '#003f66',\n    color: '#ffffff',\n    border: 'none',\n    borderRadius: '6px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    fontWeight: '600',\n    transition: 'background-color 0.2s',\n  },\n};\n\nexport default PostOrder;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  FaBars,\n  FaTimes,\n  FaSearch,\n  FaShoppingCart,\n  FaUser,\n  FaEnvelope,\n  FaRobot // AI icon\n} from 'react-icons/fa';\nimport { useNavigate } from 'react-router-dom';\nimport { db } from '../firebase';\nimport { collection, query, where, getDocs, orderBy } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\n\nconst categoriesList = [\n  'Photography', 'Food', 'Music', 'Catering', 'Venue', 'Return Gift',\n  'Travel', 'DJ', 'Cakes & Bakery', 'Decoration', 'Orchestra',\n  'Wedding', 'Beautician', 'Other'\n];\n\nconst Navbar = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [companies, setCompanies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [aiBoxOpen, setAiBoxOpen] = useState(false);\n  const [chatMessages, setChatMessages] = useState([]);\n\n  useEffect(() => {\n    if (aiBoxOpen && chatMessages.length === 0) {\n      setChatMessages([{ sender: 'claura', text: 'Hi, welcome this is ms.Claura your ai assistant. Say hi to begin' }]);\n      setChatStep('initial');\n    }\n  }, [aiBoxOpen]);\n  const [userInput, setUserInput] = useState('');\n  const [chatStep, setChatStep] = useState('initial'); // initial, waitingForHi, eventName, categories, budget, results\n  const [eventName, setEventName] = useState('');\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [budget, setBudget] = useState('');\n  const chatEndRef = useRef(null);\n  const navigate = useNavigate();\n  const auth = getAuth();\n  const user = auth.currentUser;\n\n  useEffect(() => {\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [chatMessages]);\n\n  const addMessage = (sender, text) => {\n    setChatMessages(prev => [...prev, { sender, text }]);\n  };\n\n  const handleUserInputChange = (e) => {\n    setUserInput(e.target.value);\n  };\n\n  const delay = ms => new Promise(res => setTimeout(res, ms));\n\n  const handleUserInputSubmit = async (e) => {\n    e.preventDefault();\n    const input = userInput.trim();\n    if (!input) return;\n\n    addMessage('user', input);\n    setUserInput('');\n\n    if (chatStep === 'initial') {\n      if (input.toLowerCase().startsWith('hi')) {\n        setTimeout(() => {\n          addMessage('claura', 'What is your event name?');\n          setChatStep('eventName');\n        }, 1000);\n      } else {\n        addMessage('claura', 'Please say \"hi\" to continue.');\n      }\n      return;\n    }\n\n    if (chatStep === 'eventName') {\n      setEventName(input);\n      await delay(3000);\n      addMessage('claura', `Thanks! Your event name is \"${input}\". What categories do you need? Please select from below.`);\n      setChatStep('categories');\n    } else if (chatStep === 'budget') {\n      if (isNaN(Number(input)) || Number(input) <= 0) {\n        addMessage('claura', 'Please enter a valid positive number for budget.');\n        return;\n      }\n      setBudget(input);\n      addMessage('claura', `Great! Searching companies under budget ${input}...`);\n      setChatStep('results');\n      await fetchCompanies(input, selectedCategories);\n    }\n  };\n\n  const handleCategorySelect = (category) => {\n    let newSelected;\n    if (selectedCategories.includes(category)) {\n      newSelected = selectedCategories.filter(c => c !== category);\n    } else {\n      newSelected = [...selectedCategories, category];\n    }\n    setSelectedCategories(newSelected);\n  };\n\n  const handleCategoriesConfirm = () => {\n    if (selectedCategories.length === 0) {\n      addMessage('claura', 'Please select at least one category.');\n      return;\n    }\n    addMessage('user', `Selected categories: ${selectedCategories.join(', ')}`);\n    addMessage('claura', 'What is your budget? Please enter a number.');\n    setChatStep('budget');\n  };\n\n  const fetchCompanies = async (budgetLimit, categories) => {\n    setLoading(true);\n    try {\n      let q;\n      if (categories.length > 0) {\n        q = query(\n          collection(db, 'postorder'),\n          where('eventname', 'in', categories)\n        );\n      } else {\n        q = query(collection(db, 'postorder'));\n      }\n      const snap = await getDocs(q);\n      let companiesList = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n      companiesList = companiesList.filter(c => c.minprice <= Number(budgetLimit));\n      if (companiesList.length === 0) {\n        addMessage('claura', 'No companies found under your budget and selected categories.');\n      } else {\n        addMessage('claura', 'Here are the companies under your budget:');\n        companiesList.forEach(c => {\n          addMessage('claura', `${c.businessname} - Minimum Price: ${c.minprice}`);\n        });\n      }\n    } catch (err) {\n      console.error('Error fetching companies:', err);\n      addMessage('claura', 'Sorry, there was an error fetching companies.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = async (e) => {\n    const qText = e.target.value;\n    setSearchQuery(qText);\n\n    if (!qText) {\n      setCompanies([]);\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const q = query(\n        collection(db, 'postorder'),\n        where('businessname', '>=', qText),\n        where('businessname', '<=', qText + '\\uf8ff')\n      );\n      const snap = await getDocs(q);\n      setCompanies(snap.docs.map(doc => ({ id: doc.id, ...doc.data() })));\n    } catch (err) {\n      console.error('Error fetching companies:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSelect = (company) => {\n    if (!user) {\n      navigate('/login');\n      setMenuOpen(false);\n      return;\n    }\n    navigate(`/company/${company.id}`);\n    setSearchQuery('');\n    setCompanies([]);\n    setMenuOpen(false);\n  };\n\n  const handleNavClick = (path) => {\n    if (!user) {\n      navigate('/login');\n      setMenuOpen(false);\n      return;\n    }\n    navigate(path);\n    setMenuOpen(false);\n  };\n\n  const handleAiButtonClick = () => {\n    setAiBoxOpen(prev => !prev);\n    if (!aiBoxOpen) {\n      // Reset chat on open\n      setChatMessages([]);\n      setChatStep('initial');\n      setEventName('');\n      setSelectedCategories([]);\n      setBudget('');\n      setUserInput('');\n    }\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-main\">\n        <div className=\"nav-left\">\n          <div className=\"navbar-logo\" onClick={() => navigate('/home')}>Planora</div>\n        </div>\n\n        <div className=\"nav-center\">\n          <div className=\"navbar-search\">\n            <FaSearch className=\"search-icon\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search...\"\n              value={searchQuery}\n              onChange={handleSearch}\n            />\n            {searchQuery && (\n              <div className=\"search-results\">\n                {loading ? (\n                  <div className=\"loading\">Loading...</div>\n                ) : companies.length ? (\n                  companies.map((c) => (\n                    <div\n                      key={c.id}\n                      className=\"result-item\"\n                      onClick={() => handleSelect(c)}\n                    >\n                      {c.businessname}\n                    </div>\n                  ))\n                ) : (\n                  <div className=\"no-results\">No matches found</div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"nav-right\">\n          <ul className={`nav-links ${menuOpen ? 'active' : ''}`}>\n            <li onClick={() => handleNavClick('/home')}>Home</li>\n            <li onClick={() => handleNavClick('/orders')}>Orders</li>\n            <li onClick={() => handleNavClick('/post-order')}>Post Order</li>\n            <li onClick={handleAiButtonClick}><FaRobot /> AI</li>\n            <li onClick={() => handleNavClick('/profile')}><FaUser /> Profile</li>\n            <li onClick={() => handleNavClick('/messages')}><FaEnvelope /> Messages</li>\n            <li onClick={() => handleNavClick('/cart')}><FaShoppingCart /> Cart</li>\n          </ul>\n        </div>\n\n        <div className=\"hamburger\" onClick={() => setMenuOpen(prev => !prev)}>\n          {menuOpen ? <FaTimes /> : <FaBars />}\n        </div>\n      </div>\n\n      {aiBoxOpen && (\n        <div className=\"ai-chat-box\">\n          <div className=\"chat-messages\">\n            {chatMessages.map((msg, index) => (\n              <div\n                key={index}\n                className={`chat-message ${msg.sender === 'claura' ? 'claura' : 'user'}`}\n              >\n                {msg.text}\n              </div>\n            ))}\n            <div ref={chatEndRef} />\n          </div>\n          {chatStep === 'categories' ? (\n            <div className=\"categories-buttons\">\n              {categoriesList.map(category => (\n                <button\n                  key={category}\n                  className={selectedCategories.includes(category) ? 'category-btn selected' : 'category-btn'}\n                  onClick={() => handleCategorySelect(category)}\n                >\n                  {category}\n                </button>\n              ))}\n              <button className=\"confirm-btn\" onClick={handleCategoriesConfirm}>Confirm</button>\n            </div>\n          ) : (\n            <>\n              {chatStep === 'budget' ? (\n                <div className=\"budget-slider-container\">\n                <input\n                  type=\"range\"\n                  min=\"500\"\n                  max=\"1000000\"\n                  step=\"100\"\n                  value={budget || 500}\n                  onChange={(e) => setBudget(Number(e.target.value))}\n                />\n                <input\n                  type=\"number\"\n                  min=\"500\"\n                  max=\"1000000\"\n                  step=\"100\"\n                  value={budget || 500}\n                  onChange={(e) => {\n                    let val = Number(e.target.value);\n                    if (val < 500) val = 500;\n                    else if (val > 1000000) val = 1000000;\n                    setBudget(val);\n                  }}\n                  style={{ marginTop: '10px', padding: '5px', borderRadius: '5px', border: 'none', fontSize: '1rem' }}\n                />\n                <div className=\"budget-value\">Selected Budget: {budget || 500}</div>\n                <button className=\"confirm-btn\" onClick={() => {\n                  if (!budget || isNaN(Number(budget)) || Number(budget) < 500) {\n                    addMessage('claura', 'Please select a budget between 500 and 1,000,000.');\n                    return;\n                  }\n                  addMessage('user', `Selected budget: ${budget}`);\n                  addMessage('claura', `Great! Searching companies under budget ${budget}...`);\n                  setChatStep('results');\n                  fetchCompanies(budget, selectedCategories);\n                }}>Confirm</button>\n              </div>\n              ) : (\n                <form className=\"chat-input-form\" onSubmit={handleUserInputSubmit}>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Type your message...\"\n                    value={userInput}\n                    onChange={handleUserInputChange}\n                    autoFocus\n                    disabled={chatStep === 'categories' || chatStep === 'results'}\n                  />\n                  <button type=\"submit\" disabled={chatStep === 'categories' || chatStep === 'results'}>Send</button>\n                </form>\n              )}\n            </>\n          )}\n        </div>\n      )}\n\n      <style>{`\n        * {\n          box-sizing: border-box;\n          margin: 0;\n          padding: 0;\n        }\n        .navbar {\n          background: #003f66;\n          color: #fff;\n          padding: 0.5rem 1rem;\n          position: sticky;\n          top: 0;\n          z-index: 1000;\n        }\n        .navbar-main {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          flex-wrap: wrap;\n        }\n\n        .nav-left {\n          flex: 1;\n        }\n\n        .nav-center {\n          flex: 2;\n          display: flex;\n          justify-content: center;\n        }\n\n        .nav-right {\n          flex: 2;\n          display: flex;\n          justify-content: flex-end;\n        }\n\n        .navbar-logo {\n          font-size: 1.5rem;\n          font-weight: bold;\n          cursor: pointer;\n        }\n\n        .navbar-search {\n          position: relative;\n          width: 100%;\n          max-width: 400px;\n          background: rgba(255,255,255,0.2);\n          border-radius: 20px;\n          display: flex;\n          align-items: center;\n          padding: 0.3rem 0.65rem;\n        }\n\n        .navbar-search input {\n          flex: 1;\n          background: transparent;\n          border: none;\n          color: #fff;\n          margin-left: 0.5rem;\n          font-size: 0.9rem;\n          outline: none;\n        }\n\n        .search-icon {\n          color: #ddd;\n        }\n\n        .search-results {\n          position: absolute;\n          top: 110%;\n          left: 0;\n          width: 100%;\n          background: #fff;\n          color: #333;\n          border-radius: 0 0 10px 10px;\n          box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n          max-height: 200px;\n          overflow-y: auto;\n          z-index: 1001;\n        }\n\n        .result-item, .loading, .no-results {\n          padding: 0.5rem;\n          border-bottom: 1px solid #eee;\n          cursor: pointer;\n        }\n\n        .result-item:hover {\n          background: #f0f0f0;\n        }\n\n        .hamburger {\n          display: none;\n          font-size: 1.5rem;\n          color: #fff;\n          cursor: pointer;\n        }\n\n        .nav-links {\n          list-style: none;\n          display: flex;\n          gap: 1.9rem;\n          align-items: center;\n        }\n\n        .nav-links li {\n          cursor: pointer;\n          padding: 0.5rem;\n          border-radius: 6px;\n          transition: background 0.2s;\n          display: flex;\n          align-items: center;\n          gap: 0.2rem;\n          white-space: nowrap;\n        }\n\n        .nav-links li:hover {\n          background: rgba(255, 255, 255, 0.2);\n        }\n\n        .ai-chat-box {\n          position: absolute;\n          top: 60px;\n          right: 10px;\n          width: 400px;\n          max-height: 600px;\n          background: #ffffff; /* Changed to white background */\n          color: #333333; /* Dark text for contrast */\n          border-radius: 12px;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n          display: flex;\n          flex-direction: column;\n          overflow: hidden;\n          z-index: 1100;\n          font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        }\n\n        .chat-messages {\n          flex: 1;\n          padding: 1rem;\n          overflow-y: auto;\n          background: #ffffff; /* white background for chat messages */\n          display: flex;\n          flex-direction: column;\n          gap: 10px;\n        }\n\n        .chat-message {\n          max-width: 80%;\n          padding: 12px 20px;\n          border-radius: 20px;\n          font-size: 1rem;\n          line-height: 1.4;\n          word-wrap: break-word;\n          white-space: pre-wrap;\n        }\n\n        .chat-message.claura {\n          background: #0078d7; /* bright blue for AI messages */\n          color: #fff;\n          align-self: flex-start;\n          border-bottom-left-radius: 0;\n          box-shadow: 0 1px 3px rgba(0,0,0,0.2);\n        }\n\n        .chat-message.user {\n          background: #e1e1e1; /* light gray for user messages */\n          color: #333333;\n          align-self: flex-end;\n          border-bottom-right-radius: 0;\n          box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n        }\n\n        .chat-input-form {\n          display: flex;\n          padding: 10px;\n          background: #f5f5f5; /* light background for input area */\n          border-top: 1px solid #ddd;\n        }\n\n        .chat-input-form input {\n          flex: 1;\n          border: none;\n          border-radius: 10px;\n          padding: 10px 15px;\n          font-size: 1rem;\n          background: #fff;\n          color: #333;\n          outline: none;\n        }\n\n        .chat-input-form input::placeholder {\n          color: #999;\n        }\n\n        .chat-input-form button {\n          background: #0078d7;\n          border: none;\n          color: white;\n          padding: 0 20px;\n          margin-left: 10px;\n          border-radius: 10px;\n          cursor: pointer;\n          font-size: 1rem;\n          transition: background 0.3s;\n        }\n\n        .chat-input-form button:hover {\n          background: #005a99;\n        }\n\n        .categories-buttons {\n          display: flex;\n          flex-wrap: wrap;\n          gap: 8px;\n          padding: 10px;\n          background: #40414f;\n          border-top: 1px solid #52525b;\n          border-radius: 0 0 15px 15px;\n        }\n\n        .category-btn {\n          background: #303136;\n          color: #fff;\n          border: none;\n          padding: 8px 12px;\n          border-radius: 20px;\n          cursor: pointer;\n          font-size: 0.9rem;\n          transition: background 0.3s;\n        }\n\n        .category-btn.selected {\n          background: #10a37f;\n        }\n\n        .category-btn:hover {\n          background: #50535a;\n        }\n\n        .confirm-btn {\n          background: #10a37f;\n          color: white;\n          border: none;\n          padding: 8px 16px;\n          border-radius: 20px;\n          cursor: pointer;\n          font-size: 0.9rem;\n          margin-left: auto;\n          transition: background 0.3s;\n        }\n\n        .confirm-btn:hover {\n          background: #0e8e6e;\n        }\n\n        @media (max-width: 768px) {\n          .ai-chat-box {\n            width: 90%;\n            right: 5%;\n            bottom: 10px;\n            max-height: 400px;\n          }\n        }\n        .budget-slider-container {\n          display: flex;\n          flex-direction: column;\n          padding: 10px;\n          background: #40414f;\n          border-top: 1px solid #52525b;\n          border-radius: 0 0 15px 15px;\n          gap: 10px;\n        }\n        .budget-slider-container input[type=\"range\"] {\n          width: 100%;\n          -webkit-appearance: none;\n          height: 8px;\n          border-radius: 5px;\n          background: #303136;\n          outline: none;\n          cursor: pointer;\n        }\n        .budget-slider-container input[type=\"range\"]::-webkit-slider-thumb {\n          -webkit-appearance: none;\n          appearance: none;\n          width: 20px;\n          height: 20px;\n          border-radius: 50%;\n          background: #10a37f;\n          cursor: pointer;\n          border: none;\n          margin-top: -6px;\n        }\n        .budget-slider-container input[type=\"range\"]::-moz-range-thumb {\n          width: 20px;\n          height: 20px;\n          border-radius: 50%;\n          background: #10a37f;\n          cursor: pointer;\n          border: none;\n        }\n        .budget-value {\n          color: #fff;\n          font-size: 1rem;\n          text-align: center;\n        }\n      `}</style>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"],"names":["categories","styles","pageWrapper","backgroundColor","minHeight","paddingBottom","card","maxWidth","margin","borderRadius","padding","boxShadow","color","title","textAlign","marginBottom","fontSize","fontWeight","form","display","flexDirection","gap","row","flexWrap","input","flex","border","select","textarea","resize","fileLabel","fileInput","marginTop","previewContainer","position","imagePreview","width","height","objectFit","removeButton","top","right","lineHeight","cursor","menuImagePreviewContainer","submitButton","transition","PostOrder","businessname","setBusinessname","useState","description","setDescription","eventname","setEventname","experience","setExperience","from","setFrom","hours","setHours","location","setLocation","mobilenumber","setMobilenumber","name","setName","minPrice","setMinPrice","maxPrice","setMaxPrice","image","setImage","menuImages","setMenuImages","setImagePreview","menuImagePreviews","setMenuImagePreviews","loading","setLoading","navigate","useNavigate","user","getAuth","currentUser","_jsxs","style","children","_jsx","Navbar","onSubmit","async","e","preventDefault","length","alert","mainRef","ref","storage","uid","Date","now","uploadBytes","mainURL","getDownloadURL","menuURLs","Promise","all","map","mRef","file","addDoc","collection","db","menu","vendorid","minprice","maxprice","err","console","error","type","placeholder","value","onChange","target","required","cat","accept","files","URL","createObjectURL","src","alt","onClick","removeMainImage","multiple","Array","f","preview","idx","index","imgs","splice","previews","removeMenuImage","disabled","categoriesList","searchQuery","setSearchQuery","companies","setCompanies","menuOpen","setMenuOpen","aiBoxOpen","setAiBoxOpen","chatMessages","setChatMessages","useEffect","sender","text","setChatStep","userInput","setUserInput","chatStep","eventName","setEventName","selectedCategories","setSelectedCategories","budget","setBudget","chatEndRef","useRef","current","scrollIntoView","behavior","addMessage","prev","fetchCompanies","budgetLimit","q","query","where","companiesList","getDocs","docs","doc","id","data","filter","c","Number","forEach","handleNavClick","path","className","FaSearch","qText","snap","company","handleSelect","handleAiButtonClick","FaRobot","FaUser","FaEnvelope","FaShoppingCart","FaTimes","FaBars","msg","category","includes","newSelected","handleCategorySelect","handleCategoriesConfirm","join","_Fragment","min","max","step","val","isNaN","trim","ms","res","setTimeout","toLowerCase","startsWith","autoFocus"],"sourceRoot":""}