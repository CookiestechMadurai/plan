{"version":3,"file":"static/js/533.c7a1ca78.chunk.js","mappings":"0LAQA,MA0EMA,EAAS,CACbC,UAAW,CACTC,QAAS,OACTC,SAAU,QACVC,OAAQ,UAEVC,OAAQ,CACNC,SAAU,SACVC,aAAc,OACdC,MAAO,WAETC,WAAY,CACVC,QAAS,OACTC,cAAe,SACfC,IAAK,QAEPC,UAAW,CACTX,QAAS,OACTY,gBAAiB,UACjBC,aAAc,MACdC,UAAW,6BAEbC,WAAY,CACVC,UAAW,OACXhB,QAAS,WACTY,gBAAiB,UACjBN,MAAO,OACPW,OAAQ,OACRJ,aAAc,MACdK,OAAQ,YAIZ,EA3GaC,KACX,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GAEjCG,GADOC,EAAAA,EAAAA,MACKC,YACZC,GAAWC,EAAAA,EAAAA,OAoBjBC,EAAAA,EAAAA,YAAU,KAlBUC,WAClB,GAAKN,EAAL,CACAD,GAAW,GACX,IACE,MAAMQ,GAAIC,EAAAA,EAAAA,IAAMC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,eAAeC,EAAAA,EAAAA,IAAM,SAAU,KAAMX,EAAKY,MAEnE9B,SADsB+B,EAAAA,EAAAA,IAAQN,IACHO,KAAKC,KAAIC,IAAG,CAC3CC,GAAID,EAAIC,MACLD,EAAIE,WAETtB,EAAUd,EACZ,CAAE,MAAOqC,GACPC,QAAQC,MAAM,yBAA0BF,EAC1C,CAAC,QACCpB,GAAW,EACb,CAdiB,CAcjB,EAIAuB,EAAa,GACZ,CAACtB,IAaJ,OACEuB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACPJ,EAAAA,EAAAA,MAAA,OAAKK,MAAOvD,EAAOC,UAAUmD,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAIE,MAAOvD,EAAOK,OAAO+C,SAAC,gBACzB3B,GACC4B,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2BACiB,IAAlB9B,EAAOkC,QACTH,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sBAEHC,EAAAA,EAAAA,KAAA,OAAKE,MAAOvD,EAAOS,WAAW2C,SAC3B9B,EAAOoB,KAAKe,IACXP,SAAAA,EAAAA,MAAA,OAAoBK,MAAOvD,EAAOa,UAAUuC,SAAA,EAC1CF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBAAsB,IAAEK,EAAMC,iBACzCR,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAAkB,IAAEK,EAAME,aACrCT,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,mBAAuB,IAAEK,EAAMG,gBAC1CV,EAAAA,EAAAA,MAAA,KAAGK,OA3BOM,EA2BeJ,EAAMI,OA1B5B,aAAXA,EAA8B,CAAErD,MAAO,OAC5B,aAAXqD,EAA8B,CAAErD,MAAO,SACpC,CAAC,GAwB2C4C,SAAA,EACrCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,YAAgB,IAAEK,EAAMI,QAAU,cAE5CR,EAAAA,EAAAA,KAAA,UACEE,MAAOvD,EAAOiB,WACd6C,QAASA,KAAMC,OA1BNC,EA0BsBP,EAAMQ,UAAYR,EAAMS,WA1BpCC,EA0BgDV,EAAMC,kBAzBlFM,GAAaG,GAClBrC,EAAS,sBAAsBkC,gBAAuBI,mBAAmBD,OAFnDJ,IAACC,EAAUG,CA0BoE,EAAAf,SACxF,WAVOK,EAAMb,IAvBJiB,KAqCb,WAIN,C","sources":["pages/Cart.js"],"sourcesContent":["// src/pages/Cart.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { db } from '../firebase';\r\nimport { collection, query, where, getDocs } from 'firebase/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar';\r\n\r\nconst Cart = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const auth = getAuth();\r\n  const user = auth.currentUser;\r\n  const navigate = useNavigate();\r\n\r\n  const fetchOrders = async () => {\r\n    if (!user) return;\r\n    setLoading(true);\r\n    try {\r\n      const q = query(collection(db, 'placeorder'), where('userid', '==', user.uid));\r\n      const querySnapshot = await getDocs(q);\r\n      const ordersList = querySnapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setOrders(ordersList);\r\n    } catch (err) {\r\n      console.error('Error fetching orders:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, [user]);\r\n\r\n  const getStatusColor = (status) => {\r\n    if (status === 'Rejected') return { color: 'red' };\r\n    if (status === 'Accepted') return { color: 'green' };\r\n    return {};\r\n  };\r\n\r\n  const handleChatClick = (vendorId, vendorName) => {\r\n    if (!vendorId || !vendorName) return;\r\n    navigate(`/messages?vendorId=${vendorId}&vendorName=${encodeURIComponent(vendorName)}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div style={styles.container}>\r\n        <h2 style={styles.header}>Your Orders</h2>\r\n        {loading ? (\r\n          <p>Loading your orders...</p>\r\n        ) : orders.length === 0 ? (\r\n          <p>No orders found.</p>\r\n        ) : (\r\n          <div style={styles.ordersList}>\r\n            {orders.map((order) => (\r\n              <div key={order.id} style={styles.orderCard}>\r\n                <p><strong>Company Name:</strong> {order.businessname}</p>\r\n                <p><strong>Location:</strong> {order.location}</p>\r\n                <p><strong>Date of Event:</strong> {order.dateofevent}</p>\r\n                <p style={getStatusColor(order.status)}>\r\n                  <strong>Status:</strong> {order.status || 'Pending'}\r\n                </p>\r\n                <button\r\n                  style={styles.chatButton}\r\n                  onClick={() => handleChatClick(order.vendorid || order.businessid, order.businessname)}\r\n                >\r\n                  Chat\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    padding: '1rem',\r\n    maxWidth: '800px',\r\n    margin: '0 auto',\r\n  },\r\n  header: {\r\n    fontSize: '1.8rem',\r\n    marginBottom: '1rem',\r\n    color: '#003f66',\r\n  },\r\n  ordersList: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '1rem',\r\n  },\r\n  orderCard: {\r\n    padding: '1rem',\r\n    backgroundColor: '#f1f1f1',\r\n    borderRadius: '8px',\r\n    boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\r\n  },\r\n  chatButton: {\r\n    marginTop: '10px',\r\n    padding: '8px 16px',\r\n    backgroundColor: '#003f66',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default Cart;\r\n"],"names":["styles","container","padding","maxWidth","margin","header","fontSize","marginBottom","color","ordersList","display","flexDirection","gap","orderCard","backgroundColor","borderRadius","boxShadow","chatButton","marginTop","border","cursor","Cart","orders","setOrders","useState","loading","setLoading","user","getAuth","currentUser","navigate","useNavigate","useEffect","async","q","query","collection","db","where","uid","getDocs","docs","map","doc","id","data","err","console","error","fetchOrders","_jsxs","_Fragment","children","_jsx","Navbar","style","length","order","businessname","location","dateofevent","status","onClick","handleChatClick","vendorId","vendorid","businessid","vendorName","encodeURIComponent"],"sourceRoot":""}