{"version":3,"file":"static/js/999.9976370f.chunk.js","mappings":"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","sources":["components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  FaBars,\n  FaTimes,\n  FaSearch,\n  FaShoppingCart,\n  FaUser,\n  FaEnvelope,\n  FaRobot // AI icon\n} from 'react-icons/fa';\nimport { useNavigate } from 'react-router-dom';\nimport { db } from '../firebase';\nimport { collection, query, where, getDocs, orderBy } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\n\nconst categoriesList = [\n  'Photography', 'Food', 'Music', 'Catering', 'Venue', 'Return Gift',\n  'Travel', 'DJ', 'Cakes & Bakery', 'Decoration', 'Orchestra',\n  'Wedding', 'Beautician', 'Other'\n];\n\n  const Navbar = () => {\n    const [searchQuery, setSearchQuery] = useState('');\n    const [companies, setCompanies] = useState([]);\n    const [loading, setLoading] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n    const [aiBoxOpen, setAiBoxOpen] = useState(false);\n    const [chatMessages, setChatMessages] = useState([]);\n    const sidebarRef = React.useRef(null);\n\n    React.useEffect(() => {\n      function handleClickOutside(event) {\n        if (sidebarRef.current && !sidebarRef.current.contains(event.target)) {\n          setMenuOpen(false);\n        }\n      }\n      if (menuOpen) {\n        document.addEventListener('mousedown', handleClickOutside);\n      } else {\n        document.removeEventListener('mousedown', handleClickOutside);\n      }\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }, [menuOpen]);\n\n  useEffect(() => {\n    if (aiBoxOpen && chatMessages.length === 0) {\n      setChatMessages([{ sender: 'claura', text: 'Hi, welcome this is ms.Claura your ai assistant. Say hi to begin' }]);\n      setChatStep('initial');\n    }\n  }, [aiBoxOpen]);\n  const [userInput, setUserInput] = useState('');\n  const [chatStep, setChatStep] = useState('initial'); // initial, waitingForHi, eventName, categories, budget, results\n  const [eventName, setEventName] = useState('');\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [budget, setBudget] = useState('');\n  const chatEndRef = useRef(null);\n  const navigate = useNavigate();\n  const auth = getAuth();\n  const user = auth.currentUser;\n\n  useEffect(() => {\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [chatMessages]);\n\n  const addMessage = (sender, text) => {\n    setChatMessages(prev => [...prev, { sender, text }]);\n  };\n\n  const handleUserInputChange = (e) => {\n    setUserInput(e.target.value);\n  };\n\n  const delay = ms => new Promise(res => setTimeout(res, ms));\n\n  const handleUserInputSubmit = async (e) => {\n    e.preventDefault();\n    const input = userInput.trim();\n    if (!input) return;\n\n    addMessage('user', input);\n    setUserInput('');\n\n    if (chatStep === 'initial') {\n      if (input.toLowerCase().startsWith('hi')) {\n        setTimeout(() => {\n          addMessage('claura', 'What is your event name?');\n          setChatStep('eventName');\n        }, 1000);\n      } else {\n        addMessage('claura', 'Please say \"hi\" to continue.');\n      }\n      return;\n    }\n\n    if (chatStep === 'eventName') {\n      setEventName(input);\n      await delay(3000);\n      addMessage('claura', `Thanks! Your event name is \"${input}\". What categories do you need? Please select from below.`);\n      setChatStep('categories');\n    } else if (chatStep === 'budget') {\n      if (isNaN(Number(input)) || Number(input) <= 0) {\n        addMessage('claura', 'Please enter a valid positive number for budget.');\n        return;\n      }\n      setBudget(input);\n      addMessage('claura', `Great! Searching companies under budget ${input}...`);\n      setChatStep('results');\n      await fetchCompanies(input, selectedCategories);\n    }\n  };\n\n  const handleCategorySelect = (category) => {\n    let newSelected;\n    if (selectedCategories.includes(category)) {\n      newSelected = selectedCategories.filter(c => c !== category);\n    } else {\n      newSelected = [...selectedCategories, category];\n    }\n    setSelectedCategories(newSelected);\n  };\n\n  const handleCategoriesConfirm = () => {\n    if (selectedCategories.length === 0) {\n      addMessage('claura', 'Please select at least one category.');\n      return;\n    }\n    addMessage('user', `Selected categories: ${selectedCategories.join(', ')}`);\n    addMessage('claura', 'What is your budget? Please enter a number.');\n    setChatStep('budget');\n  };\n\n  const fetchCompanies = async (budgetLimit, categories) => {\n    setLoading(true);\n    try {\n      let q;\n      if (categories.length > 0) {\n        q = query(\n          collection(db, 'postorder'),\n          where('eventname', 'in', categories)\n        );\n      } else {\n        q = query(collection(db, 'postorder'));\n      }\n      const snap = await getDocs(q);\n      let companiesList = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n      companiesList = companiesList.filter(c => c.minprice <= Number(budgetLimit));\n      if (companiesList.length === 0) {\n        addMessage('claura', 'No companies found under your budget and selected categories.');\n      } else {\n        addMessage('claura', 'Here are the companies under your budget:');\n        companiesList.forEach(c => {\n          addMessage('claura', `${c.businessname} - Minimum Price: ${c.minprice}`);\n        });\n      }\n    } catch (err) {\n      console.error('Error fetching companies:', err);\n      addMessage('claura', 'Sorry, there was an error fetching companies.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = async (e) => {\n    const qText = e.target.value;\n    setSearchQuery(qText);\n\n    if (!qText) {\n      setCompanies([]);\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const q = query(\n        collection(db, 'postorder'),\n        where('businessname', '>=', qText),\n        where('businessname', '<=', qText + '\\uf8ff')\n      );\n      const snap = await getDocs(q);\n      setCompanies(snap.docs.map(doc => ({ id: doc.id, ...doc.data() })));\n    } catch (err) {\n      console.error('Error fetching companies:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSelect = (company) => {\n    if (!user) {\n      navigate('/login');\n      setMenuOpen(false);\n      return;\n    }\n    navigate(`/company/${company.id}`);\n    setSearchQuery('');\n    setCompanies([]);\n    setMenuOpen(false);\n  };\n\n  const handleNavClick = (path) => {\n    if (!user) {\n      navigate('/login');\n      setMenuOpen(false);\n      return;\n    }\n    navigate(path);\n    setMenuOpen(false);\n  };\n\n  const handleAiButtonClick = () => {\n    setAiBoxOpen(prev => !prev);\n    if (!aiBoxOpen) {\n      // Reset chat on open\n      setChatMessages([]);\n      setChatStep('initial');\n      setEventName('');\n      setSelectedCategories([]);\n      setBudget('');\n      setUserInput('');\n    }\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-main\">\n        <div className=\"nav-left\">\n          <div className=\"navbar-logo\" onClick={() => navigate('/home')}>Planora</div>\n        </div>\n\n        <div className=\"nav-center\">\n          <div className=\"navbar-search\">\n            <FaSearch className=\"search-icon\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search...\"\n              value={searchQuery}\n              onChange={handleSearch}\n            />\n            {searchQuery && (\n              <div className=\"search-results\">\n                {loading ? (\n                  <div className=\"loading\">Loading...</div>\n                ) : companies.length ? (\n                  companies.map((c) => (\n                    <div\n                      key={c.id}\n                      className=\"result-item\"\n                      onClick={() => handleSelect(c)}\n                    >\n                      {c.businessname}\n                    </div>\n                  ))\n                ) : (\n                  <div className=\"no-results\">No matches found</div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"nav-right\">\n        <ul className={`nav-links ${menuOpen ? 'active' : ''}`}>\n          <li onClick={() => { handleNavClick('/home'); setMenuOpen(false); }}>Home</li>\n          <li onClick={() => { handleNavClick('/orders'); setMenuOpen(false); }}>Orders</li>\n          <li onClick={() => { handleNavClick('/post-order'); setMenuOpen(false); }}>Post Order</li>\n          <li onClick={() => { handleAiButtonClick(); setMenuOpen(false); }}><FaRobot /> AI</li>\n          <li onClick={() => { handleNavClick('/profile'); setMenuOpen(false); }}><FaUser /> Profile</li>\n          <li onClick={() => { handleNavClick('/messages'); setMenuOpen(false); }}><FaEnvelope /> Messages</li>\n          <li onClick={() => { handleNavClick('/cart'); setMenuOpen(false); }}><FaShoppingCart /> Cart</li>\n        </ul>\n          <div className=\"hamburger\" onClick={() => setMenuOpen(prev => !prev)} aria-label=\"Toggle menu\" role=\"button\" tabIndex={0} onKeyDown={(e) => { if (e.key === 'Enter' || e.key === ' ') setMenuOpen(prev => !prev); }}>\n            {menuOpen ? <FaTimes /> : <FaBars />}\n          </div>\n        </div>\n      </div>\n\n      {menuOpen && (\n        <>\n          <div className=\"overlay\" onClick={() => setMenuOpen(false)}></div>\n          <div className=\"sidebar-menu\">\n            <div className=\"sidebar-header\">\n              <div className=\"sidebar-logo\" onClick={() => { navigate('/home'); setMenuOpen(false); }}>Planora</div>\n              <div className=\"close-icon\" onClick={() => setMenuOpen(false)} aria-label=\"Close menu\" role=\"button\" tabIndex={0} onKeyDown={(e) => { if (e.key === 'Enter' || e.key === ' ') setMenuOpen(false); }}>\n                <FaTimes />\n              </div>\n            </div>\n            <div className=\"sidebar-section\">\n              <h3>Menu</h3>\n            <ul className=\"sidebar-menu-list\">\n              <li onClick={() => { handleNavClick('/home'); setMenuOpen(false); }} className=\"sidebar-menu-item\">Home</li>\n              <li onClick={() => { handleNavClick('/orders'); setMenuOpen(false); }} className=\"sidebar-menu-item\">Orders</li>\n              <li onClick={() => { handleNavClick('/post-order'); setMenuOpen(false); }} className=\"sidebar-menu-item\">Post Order</li>\n              <li onClick={() => { handleAiButtonClick(); setMenuOpen(false); }} className=\"sidebar-menu-item ai-button\"><FaRobot /> AI</li>\n              <li onClick={() => { handleNavClick('/profile'); setMenuOpen(false); }} className=\"sidebar-menu-item\">Profile</li>\n              <li onClick={() => { handleNavClick('/messages'); setMenuOpen(false); }} className=\"sidebar-menu-item\">Messages</li>\n              <li onClick={() => { handleNavClick('/cart'); setMenuOpen(false); }} className=\"sidebar-menu-item\">Cart</li>\n            </ul>\n            </div>\n            {/* Additional sections can be added here */}\n          </div>\n        </>\n      )}\n\n\n      {aiBoxOpen && (\n        <div className=\"ai-chat-box\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"ai-chat-header\">\n          <div className=\"ai-chat-header\" id=\"ai-chat-header\">\n            <div>AI Chat</div>\n            <button\n              className=\"ai-chat-close\"\n              onClick={() => setAiBoxOpen(false)}\n              aria-label=\"Close AI chat\"\n              type=\"button\"\n            >\n              <FaTimes />\n            </button>\n          </div>\n          <div className=\"chat-messages\">\n            {chatMessages.map((msg, index) => (\n              <div\n                key={index}\n                className={`chat-message ${msg.sender === 'claura' ? 'claura' : 'user'}`}\n              >\n                {msg.text}\n              </div>\n            ))}\n            <div ref={chatEndRef} />\n          </div>\n          {chatStep === 'categories' ? (\n            <div className=\"categories-buttons\">\n              {categoriesList.map(category => (\n                <button\n                  key={category}\n                  className={selectedCategories.includes(category) ? 'category-btn selected' : 'category-btn'}\n                  onClick={() => handleCategorySelect(category)}\n                >\n                  {category}\n                </button>\n              ))}\n              <button className=\"confirm-btn\" onClick={handleCategoriesConfirm}>Confirm</button>\n            </div>\n          ) : (\n            <>\n              {chatStep === 'budget' ? (\n                <div className=\"budget-slider-container\">\n                <input\n                  type=\"range\"\n                  min=\"500\"\n                  max=\"1000000\"\n                  step=\"100\"\n                  value={budget || 500}\n                  onChange={(e) => setBudget(Number(e.target.value))}\n                />\n                <input\n                  type=\"number\"\n                  min=\"500\"\n                  max=\"1000000\"\n                  step=\"100\"\n                  value={budget || 500}\n                  onChange={(e) => {\n                    let val = Number(e.target.value);\n                    if (val < 500) val = 500;\n                    else if (val > 1000000) val = 1000000;\n                    setBudget(val);\n                  }}\n                  style={{ marginTop: '10px', padding: '5px', borderRadius: '5px', border: 'none', fontSize: '1rem' }}\n                />\n                <div className=\"budget-value\">Selected Budget: {budget || 500}</div>\n                <button className=\"confirm-btn\" onClick={() => {\n                  if (!budget || isNaN(Number(budget)) || Number(budget) < 500) {\n                    addMessage('claura', 'Please select a budget between 500 and 1,000,000.');\n                    return;\n                  }\n                  addMessage('user', `Selected budget: ${budget}`);\n                  addMessage('claura', `Great! Searching companies under budget ${budget}...`);\n                  setChatStep('results');\n                  fetchCompanies(budget, selectedCategories);\n                }}>Confirm</button>\n              </div>\n              ) : (\n                <form className=\"chat-input-form\" onSubmit={handleUserInputSubmit}>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Type your message...\"\n                    value={userInput}\n                    onChange={handleUserInputChange}\n                    autoFocus\n                    disabled={chatStep === 'categories' || chatStep === 'results'}\n                  />\n                  <button type=\"submit\" disabled={chatStep === 'categories' || chatStep === 'results'}>Send</button>\n                </form>\n              )}\n            </>\n          )}\n        </div>\n      )}\n\n        <style>{`\n        * {\n          box-sizing: border-box;\n          margin: 0;\n          padding: 0;\n        }\n        .navbar {\n          background: #003f66;\n          color: #fff;\n          padding: 0.5rem 1rem;\n          position: sticky;\n          top: 0;\n          z-index: 1000;\n        }\n        .navbar-main {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          flex-wrap: wrap;\n        }\n\n        .nav-left {\n          flex: 1;\n          order: 1;\n        }\n\n        .nav-center {\n          flex: 2;\n          display: flex;\n          justify-content: center;\n          order: 2;\n        }\n\n        .nav-right {\n          flex: 2;\n          display: flex;\n          justify-content: flex-end;\n          order: 3;\n        }\n\n        .navbar-logo {\n          font-size: 1.5rem;\n          font-weight: bold;\n          cursor: pointer;\n        }\n\n        .navbar-search {\n          position: relative;\n          width: 100%;\n          max-width: 400px;\n          background: rgba(255,255,255,0.2);\n          border-radius: 20px;\n          display: flex;\n          align-items: center;\n          padding: 0.3rem 0.65rem;\n        }\n\n        .navbar-search input {\n          flex: 1;\n          background: transparent;\n          border: none;\n          color: #fff;\n          margin-left: 0.5rem;\n          font-size: 0.9rem;\n          outline: none;\n        }\n\n        .search-icon {\n          color: #ddd;\n        }\n\n        .search-results {\n          position: absolute;\n          top: 110%;\n          left: 0;\n          width: 100%;\n          background: #fff;\n          color: #333;\n          border-radius: 0 0 10px 10px;\n          box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n          max-height: 200px;\n          overflow-y: auto;\n          z-index: 1001;\n        }\n\n        .result-item, .loading, .no-results {\n          padding: 0.5rem;\n          border-bottom: 1px solid #eee;\n          cursor: pointer;\n        }\n\n        .result-item:hover {\n          background: #f0f0f0;\n        }\n\n        .hamburger {\n          display: none;\n          font-size: 1.5rem;\n          color: #fff;\n          cursor: pointer;\n        }\n\n        .nav-links {\n          list-style: none;\n          display: flex;\n          gap: 1.9rem;\n          align-items: center;\n        }\n        @media (max-width: 768px) {\n          .nav-links {\n            display: none !important;\n          }\n          .nav-links.active {\n            display: flex !important;\n            flex-direction: column;\n            width: 100%;\n            background-color: #003f66;\n            position: absolute;\n            top: 60px;\n            left: 0;\n            padding: 1rem 0;\n            border-radius: 0 0 10px 10px;\n            box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n            z-index: 1000;\n          }\n          .nav-links li {\n            padding: 1rem 2rem;\n            border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n            white-space: normal;\n          }\n        }\n\n        .nav-links li {\n          cursor: pointer;\n          padding: 0.5rem;\n          border-radius: 6px;\n          transition: background 0.2s;\n          display: flex;\n          align-items: center;\n          gap: 0.2rem;\n          white-space: nowrap;\n        }\n\n        .nav-links li:hover {\n          background: rgba(255, 255, 255, 0.2);\n        }\n\n        .ai-chat-box {\n          position: absolute;\n          top: 60px;\n          right: 10px;\n          width: 400px;\n          max-height: 600px;\n          background: #ffffff; /* Changed to white background */\n          color: #333333; /* Dark text for contrast */\n          border-radius: 12px;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n          display: flex;\n          flex-direction: column;\n          overflow: hidden;\n          z-index: 1100;\n          font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        }\n\n        .chat-messages {\n          flex: 1;\n          padding: 1rem;\n          overflow-y: auto;\n          background: #ffffff; /* white background for chat messages */\n          display: flex;\n          flex-direction: column;\n          gap: 10px;\n        }\n\n        .chat-message {\n          max-width: 80%;\n          padding: 12px 20px;\n          border-radius: 20px;\n          font-size: 1rem;\n          line-height: 1.4;\n          word-wrap: break-word;\n          white-space: pre-wrap;\n        }\n\n        .chat-message.claura {\n          background: #0078d7; /* bright blue for AI messages */\n          color: #fff;\n          align-self: flex-start;\n          border-bottom-left-radius: 0;\n          box-shadow: 0 1px 3px rgba(0,0,0,0.2);\n        }\n\n        .chat-message.user {\n          background: #e1e1e1; /* light gray for user messages */\n          color: #333333;\n          align-self: flex-end;\n          border-bottom-right-radius: 0;\n          box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n        }\n\n        .chat-input-form {\n          display: flex;\n          padding: 10px;\n          background: #f5f5f5; /* light background for input area */\n          border-top: 1px solid #ddd;\n        }\n\n        .chat-input-form input {\n          flex: 1;\n          border: none;\n          border-radius: 10px;\n          padding: 10px 15px;\n          font-size: 1rem;\n          background: #fff;\n          color: #333;\n          outline: none;\n        }\n\n        .chat-input-form input::placeholder {\n          color: #999;\n        }\n\n        .chat-input-form button {\n          background: #0078d7;\n          border: none;\n          color: white;\n          padding: 0 20px;\n          margin-left: 10px;\n          border-radius: 10px;\n          cursor: pointer;\n          font-size: 1rem;\n          transition: background 0.3s;\n        }\n\n        .chat-input-form button:hover {\n          background: #005a99;\n        }\n\n        .categories-buttons {\n          display: flex;\n          flex-wrap: wrap;\n          gap: 8px;\n          padding: 10px;\n          background: #40414f;\n          border-top: 1px solid #52525b;\n          border-radius: 0 0 15px 15px;\n        }\n\n        .category-btn {\n          background: #303136;\n          color: #fff;\n          border: none;\n          padding: 8px 12px;\n          border-radius: 20px;\n          cursor: pointer;\n          font-size: 0.9rem;\n          transition: background 0.3s;\n        }\n\n        .category-btn.selected {\n          background: #10a37f;\n        }\n\n        .category-btn:hover {\n          background: #50535a;\n        }\n\n        .confirm-btn {\n          background: #10a37f;\n          color: white;\n          border: none;\n          padding: 8px 16px;\n          border-radius: 20px;\n          cursor: pointer;\n          font-size: 0.9rem;\n          margin-left: auto;\n          transition: background 0.3s;\n        }\n\n        .confirm-btn:hover {\n          background: #0e8e6e;\n        }\n\n        @media (max-width: 768px) {\n          .ai-chat-box {\n            width: 90%;\n            right: 5%;\n            bottom: 10px;\n            max-height: 400px;\n          }\n          .hamburger {\n            display: block;\n          }\n          .nav-links {\n            display: none;\n            flex-direction: column;\n            width: 100%;\n            background-color: #003f66;\n            position: absolute;\n            top: 60px;\n            left: 0;\n            padding: 1rem 0;\n            border-radius: 0 0 10px 10px;\n            box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n            z-index: 1000;\n          }\n          .nav-links.active {\n            display: flex;\n          }\n          .nav-links li {\n            padding: 1rem 2rem;\n            border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n            white-space: normal;\n          }\n          .nav-center {\n            order: 3;\n            width: 100%;\n            margin-top: 0.5rem;\n            justify-content: flex-start;\n          }\n          .nav-left {\n            flex: none;\n          }\n          .nav-right {\n            flex: none;\n          }\n        }\n        .budget-slider-container {\n          display: flex;\n          flex-direction: column;\n          padding: 10px;\n          background: #40414f;\n          border-top: 1px solid #52525b;\n          border-radius: 0 0 15px 15px;\n          gap: 10px;\n        }\n        .budget-slider-container input[type=\"range\"] {\n          width: 100%;\n          -webkit-appearance: none;\n          height: 8px;\n          border-radius: 5px;\n          background: #303136;\n          outline: none;\n          cursor: pointer;\n        }\n        .budget-slider-container input[type=\"range\"]::-webkit-slider-thumb {\n          -webkit-appearance: none;\n          appearance: none;\n          width: 20px;\n          height: 20px;\n          border-radius: 50%;\n          background: #10a37f;\n          cursor: pointer;\n          border: none;\n          margin-top: -6px;\n        }\n        .budget-slider-container input[type=\"range\"]::-moz-range-thumb {\n          width: 20px;\n          height: 20px;\n          border-radius: 50%;\n          background: #10a37f;\n          cursor: pointer;\n          border: none;\n        }\n        .budget-value {\n          color: #fff;\n          font-size: 1rem;\n          text-align: center;\n        }\n        @media (max-width: 768px) {\n          .sidebar-menu-list {\n            list-style: none;\n            padding: 0;\n            margin: 0;\n          }\n          .sidebar-menu-item {\n            padding: 15px 20px;\n            margin: 8px 15px;\n            border-radius: 12px;\n            background-color: #005a8c;\n            color: white;\n            font-size: 1.1rem;\n            text-align: center;\n            cursor: pointer;\n            transition: background-color 0.3s ease;\n            user-select: none;\n          }\n          .sidebar-menu-item:hover {\n            background-color: #0078d7;\n          }\n          .sidebar-menu-item.ai-button {\n            background-color: #0e6eb8;\n            font-weight: 600;\n            display: inline-flex;\n            justify-content: center;\n            align-items: center;\n            gap: 0.5rem;\n          }\n          .ai-chat-box {\n            position: fixed;\n            top: 60px;\n            right: 10px;\n            width: 90%;\n            max-width: 400px;\n            max-height: 600px;\n            background: #ffffff;\n            color: #333333;\n            border-radius: 12px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n            display: flex;\n            flex-direction: column;\n            overflow: hidden;\n            z-index: 1500;\n          }\n          .ai-chat-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding: 0.5rem 1rem;\n            background-color: #003f66;\n            color: white;\n            font-weight: 600;\n            font-size: 1.2rem;\n            border-top-left-radius: 12px;\n            border-top-right-radius: 12px;\n          }\n          .ai-chat-close {\n            cursor: pointer;\n            font-size: 1.5rem;\n          }\n        }\n      `}</style>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"],"names":["categoriesList","Navbar","searchQuery","setSearchQuery","useState","companies","setCompanies","loading","setLoading","menuOpen","setMenuOpen","aiBoxOpen","setAiBoxOpen","chatMessages","setChatMessages","sidebarRef","React","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","useEffect","length","sender","text","setChatStep","userInput","setUserInput","chatStep","eventName","setEventName","selectedCategories","setSelectedCategories","budget","setBudget","chatEndRef","useRef","navigate","useNavigate","user","getAuth","currentUser","scrollIntoView","behavior","addMessage","prev","fetchCompanies","async","budgetLimit","categories","q","query","collection","db","where","companiesList","getDocs","docs","map","doc","id","data","filter","c","minprice","Number","forEach","businessname","err","console","error","handleNavClick","path","handleAiButtonClick","_jsxs","className","children","_jsx","onClick","FaSearch","type","placeholder","value","onChange","qText","e","snap","company","handleSelect","FaRobot","FaUser","FaEnvelope","FaShoppingCart","role","tabIndex","onKeyDown","key","FaTimes","FaBars","_Fragment","msg","index","ref","category","includes","newSelected","handleCategorySelect","handleCategoriesConfirm","join","min","max","step","val","style","marginTop","padding","borderRadius","border","fontSize","isNaN","onSubmit","preventDefault","input","trim","ms","Promise","res","setTimeout","toLowerCase","startsWith","autoFocus","disabled"],"sourceRoot":""}