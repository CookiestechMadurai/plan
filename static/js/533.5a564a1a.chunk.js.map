{"version":3,"file":"static/js/533.5a564a1a.chunk.js","mappings":"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","sources":["pages/Cart.js","components/Navbar.js"],"sourcesContent":["// src/pages/Cart.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { db } from '../firebase';\r\nimport { collection, query, where, getDocs } from 'firebase/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar';\r\n\r\nconst Cart = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const auth = getAuth();\r\n  const user = auth.currentUser;\r\n  const navigate = useNavigate();\r\n\r\n  const fetchOrders = async () => {\r\n    if (!user) return;\r\n    setLoading(true);\r\n    try {\r\n      const q = query(collection(db, 'placeorder'), where('userid', '==', user.uid));\r\n      const querySnapshot = await getDocs(q);\r\n      const ordersList = querySnapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setOrders(ordersList);\r\n    } catch (err) {\r\n      console.error('Error fetching orders:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, [user]);\r\n\r\n  const getStatusColor = (status) => {\r\n    if (status === 'Rejected') return { color: 'red' };\r\n    if (status === 'Accepted') return { color: 'green' };\r\n    return {};\r\n  };\r\n\r\n  const handleChatClick = (vendorId, vendorName) => {\r\n    if (!vendorId || !vendorName) return;\r\n    navigate(`/messages?vendorId=${vendorId}&vendorName=${encodeURIComponent(vendorName)}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div style={styles.container}>\r\n        <h2 style={styles.header}>Your Orders</h2>\r\n        {loading ? (\r\n          <p>Loading your orders...</p>\r\n        ) : orders.length === 0 ? (\r\n          <p>No orders found.</p>\r\n        ) : (\r\n          <div style={styles.ordersList}>\r\n            {orders.map((order) => (\r\n              <div key={order.id} style={styles.orderCard}>\r\n                <p><strong>Company Name:</strong> {order.businessname}</p>\r\n                <p><strong>Location:</strong> {order.location}</p>\r\n                <p><strong>Date of Event:</strong> {order.dateofevent}</p>\r\n                <p style={getStatusColor(order.status)}>\r\n                  <strong>Status:</strong> {order.status || 'Pending'}\r\n                </p>\r\n                <button\r\n                  style={styles.chatButton}\r\n                  onClick={() => handleChatClick(order.vendorid || order.businessid, order.businessname)}\r\n                >\r\n                  Chat\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    padding: '1rem',\r\n    maxWidth: '800px',\r\n    margin: '0 auto',\r\n  },\r\n  header: {\r\n    fontSize: '1.8rem',\r\n    marginBottom: '1rem',\r\n    color: '#003f66',\r\n  },\r\n  ordersList: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '1rem',\r\n  },\r\n  orderCard: {\r\n    padding: '1rem',\r\n    backgroundColor: '#f1f1f1',\r\n    borderRadius: '8px',\r\n    boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\r\n  },\r\n  chatButton: {\r\n    marginTop: '10px',\r\n    padding: '8px 16px',\r\n    backgroundColor: '#003f66',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default Cart;\r\n","// src/components/Navbar.js\nimport React, { useState, useEffect } from 'react';\nimport {\n  FaBars,\n  FaTimes,\n  FaSearch,\n  FaShoppingCart,\n  FaUser,\n  FaEnvelope\n} from 'react-icons/fa';\nimport { useNavigate } from 'react-router-dom';\nimport { db } from '../firebase';\nimport { collection, query, where, getDocs, orderBy } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\n\nconst Navbar = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [companies, setCompanies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const navigate = useNavigate();\n  const auth = getAuth();\n  const user = auth.currentUser;\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (!user) return;\n      try {\n        const q = query(\n          collection(db, 'webchat'),\n          where('receiverId', '==', user.uid),\n          orderBy('time', 'desc')\n        );\n        await getDocs(q); // Not used for display in navbar currently\n      } catch (err) {\n        console.error('Error fetching messages:', err);\n      }\n    };\n    fetchMessages();\n  }, [user]);\n\n  const handleSearch = async (e) => {\n    const qText = e.target.value;\n    setSearchQuery(qText);\n\n    if (!qText) {\n      setCompanies([]);\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const q = query(\n        collection(db, 'postorder'),\n        where('businessname', '>=', qText),\n        where('businessname', '<=', qText + '\\uf8ff')\n      );\n      const snap = await getDocs(q);\n      setCompanies(snap.docs.map(doc => ({ id: doc.id, ...doc.data() })));\n    } catch (err) {\n      console.error('Error fetching companies:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSelect = (company) => {\n    navigate(`/company/${company.id}`);\n    setSearchQuery('');\n    setCompanies([]);\n    setMenuOpen(false);\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-main\">\n        <div className=\"nav-left\">\n          <div className=\"navbar-logo\" onClick={() => navigate('/home')}>PlanOra</div>\n        </div>\n\n        <div className=\"nav-center\">\n          <div className=\"navbar-search\">\n            <FaSearch className=\"search-icon\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search...\"\n              value={searchQuery}\n              onChange={handleSearch}\n            />\n            {searchQuery && (\n              <div className=\"search-results\">\n                {loading ? (\n                  <div className=\"loading\">Loading...</div>\n                ) : companies.length ? (\n                  companies.map((c) => (\n                    <div\n                      key={c.id}\n                      className=\"result-item\"\n                      onClick={() => handleSelect(c)}\n                    >\n                      {c.businessname}\n                    </div>\n                  ))\n                ) : (\n                  <div className=\"no-results\">No matches found</div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"nav-right\">\n          <ul className={`nav-links ${menuOpen ? 'active' : ''}`}>\n            <li onClick={() => { navigate('/home'); setMenuOpen(false); }}>Home</li>\n            <li onClick={() => { navigate('/orders'); setMenuOpen(false); }}>Orders</li>\n            <li onClick={() => { navigate('/post-order'); setMenuOpen(false); }}>Post Order</li>\n            <li onClick={() => { navigate('/profile'); setMenuOpen(false); }}><FaUser /> Profile</li>\n            <li onClick={() => { navigate('/messages'); setMenuOpen(false); }}><FaEnvelope /> Messages</li>\n            <li onClick={() => { navigate('/cart'); setMenuOpen(false); }}><FaShoppingCart /> Cart</li>\n          </ul>\n        </div>\n\n        <div className=\"hamburger\" onClick={() => setMenuOpen(prev => !prev)}>\n          {menuOpen ? <FaTimes /> : <FaBars />}\n        </div>\n      </div>\n\n      <style>{`\n        * {\n          box-sizing: border-box;\n          margin: 0;\n          padding: 0;\n        }\n        .navbar {\n          background: #003f66;\n          color: #fff;\n          padding: 0.5rem 1rem;\n          position: sticky;\n          top: 0;\n          z-index: 1000;\n        }\n        .navbar-main {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          flex-wrap: wrap;\n        }\n\n        .nav-left {\n          flex: 1;\n        }\n\n        .nav-center {\n          flex: 2;\n          display: flex;\n          justify-content: center;\n        }\n\n        .nav-right {\n          flex: 2;\n          display: flex;\n          justify-content: flex-end;\n        }\n\n        .navbar-logo {\n          font-size: 1.5rem;\n          font-weight: bold;\n          cursor: pointer;\n        }\n\n        .navbar-search {\n          position: relative;\n          width: 100%;\n          max-width: 400px;\n          background: rgba(255,255,255,0.2);\n          border-radius: 20px;\n          display: flex;\n          align-items: center;\n          padding: 0.3rem 0.75rem;\n        }\n\n        .navbar-search input {\n          flex: 1;\n          background: transparent;\n          border: none;\n          color: #fff;\n          margin-left: 0.5rem;\n          font-size: 0.9rem;\n          outline: none;\n        }\n\n        .search-icon {\n          color: #ddd;\n        }\n\n        .search-results {\n          position: absolute;\n          top: 110%;\n          left: 0;\n          width: 100%;\n          background: #fff;\n          color: #333;\n          border-radius: 0 0 10px 10px;\n          box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n          max-height: 200px;\n          overflow-y: auto;\n          z-index: 1001;\n        }\n\n        .result-item, .loading, .no-results {\n          padding: 0.5rem;\n          border-bottom: 1px solid #eee;\n          cursor: pointer;\n        }\n\n        .result-item:hover {\n          background: #f0f0f0;\n        }\n\n        .hamburger {\n          display: none;\n          font-size: 1.5rem;\n          color: #fff;\n          cursor: pointer;\n        }\n\n        .nav-links {\n          list-style: none;\n          display: flex;\n          gap: 1.5rem;\n          align-items: center;\n        }\n\n        .nav-links li {\n          cursor: pointer;\n          padding: 0.5rem;\n          border-radius: 6px;\n          transition: background 0.2s;\n          display: flex;\n          align-items: center;\n          gap: 0.3rem;\n        }\n\n        .nav-links li:hover {\n          background: rgba(255, 255, 255, 0.2);\n        }\n\n        @media (max-width: 768px) {\n          .nav-center {\n            order: 3;\n            width: 100%;\n            margin-top: 10px;\n          }\n\n          .nav-right {\n            width: 100%;\n            justify-content: center;\n          }\n\n          .nav-links {\n            display: ${menuOpen ? 'flex' : 'none'};\n            flex-direction: column;\n            width: 100%;\n            margin-top: 1rem;\n          }\n\n          .hamburger {\n            display: block;\n          }\n        }\n      `}</style>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"],"names":["styles","container","padding","maxWidth","margin","header","fontSize","marginBottom","color","ordersList","display","flexDirection","gap","orderCard","backgroundColor","borderRadius","boxShadow","chatButton","marginTop","border","cursor","Cart","orders","setOrders","useState","loading","setLoading","user","getAuth","currentUser","navigate","useNavigate","useEffect","async","q","query","collection","db","where","uid","getDocs","docs","map","doc","id","data","err","console","error","fetchOrders","_jsxs","_Fragment","children","_jsx","Navbar","style","length","order","businessname","location","dateofevent","status","onClick","handleChatClick","vendorId","vendorid","businessid","vendorName","encodeURIComponent","searchQuery","setSearchQuery","companies","setCompanies","menuOpen","setMenuOpen","orderBy","fetchMessages","className","FaSearch","type","placeholder","value","onChange","qText","e","target","snap","c","FaUser","FaEnvelope","FaShoppingCart","prev","FaTimes","FaBars"],"sourceRoot":""}