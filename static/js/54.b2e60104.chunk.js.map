{"version":3,"file":"static/js/54.b2e60104.chunk.js","mappings":"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","sources":["pages/Orders.js","components/Navbar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { db } from '../firebase';\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  getDocs,\r\n  updateDoc,\r\n  doc,\r\n} from 'firebase/firestore';\r\nimport Navbar from '../components/Navbar';  // Import the Navbar component\r\n\r\nconst Orders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const auth = getAuth();\r\n  const user = auth.currentUser;\r\n\r\n  const fetchOrders = async () => {\r\n    if (!user) return; // Return if no user is logged in\r\n    setLoading(true);\r\n    try {\r\n      // Query to fetch orders, using 'vendorid' as the correct field\r\n      const q = query(\r\n        collection(db, 'placeorder'), // Target the 'placeorder' collection\r\n        where('vendorid', '==', user.uid) // Ensure the vendorid matches the current user's uid\r\n      );\r\n\r\n      // Fetch orders using the query\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      const results = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n\r\n      console.log('Orders fetched:', results);\r\n\r\n      if (results.length === 0) {\r\n        console.log(\"No orders found.\");\r\n      }\r\n\r\n      setOrders(results);\r\n    } catch (err) {\r\n      console.error('Error fetching orders:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateStatus = async (orderId, status) => {\r\n    try {\r\n      const orderRef = doc(db, 'placeorder', orderId);\r\n      await updateDoc(orderRef, { status });\r\n      setOrders((prev) =>\r\n        prev.map((order) =>\r\n          order.id === orderId ? { ...order, status } : order\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error(`Failed to update order status to ${status}:`, err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, [user]);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <Navbar />  {/* Add the Navbar here */}\r\n      <h2 style={styles.header}>Received Orders</h2>\r\n      {loading ? (\r\n        <p>Loading orders...</p>\r\n      ) : orders.length === 0 ? (\r\n        <p>No orders received.</p>\r\n      ) : (\r\n        <div style={styles.ordersList}>\r\n          {orders.map((order) => (\r\n            <div key={order.id} style={styles.orderCard}>\r\n              <p><strong>Name:</strong> {order.name}</p>\r\n              <p><strong>Mobile Number:</strong> {order.mobilenumber}</p>\r\n              <p><strong>Location:</strong> {order.location}</p>\r\n              <p><strong>Date of Event:</strong> {order.dateofevent}</p> {/* Displaying date of event */}\r\n              <p><strong>Status:</strong> {order.status || 'Pending'}</p>\r\n              <div style={styles.buttonGroup}>\r\n                <button\r\n                  style={{ ...styles.button, backgroundColor: '#4caf50' }}\r\n                  onClick={() => handleUpdateStatus(order.id, 'Accepted')}\r\n                  disabled={order.status === 'Accepted'}\r\n                >\r\n                  Accept\r\n                </button>\r\n                <button\r\n                  style={{ ...styles.button, backgroundColor: '#f44336' }}\r\n                  onClick={() => handleUpdateStatus(order.id, 'Rejected')}\r\n                  disabled={order.status === 'Rejected'}\r\n                >\r\n                  Reject\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Inline CSS styles\r\nconst styles = {\r\n  container: {\r\n    padding: '1rem',\r\n    margin: '0 auto',\r\n  },\r\n  header: {\r\n    fontSize: '1.8rem',\r\n    marginBottom: '1rem',\r\n    color: '#003f66',\r\n  },\r\n  ordersList: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '1rem',\r\n  },\r\n  orderCard: {\r\n    padding: '1rem',\r\n    backgroundColor: '#f1f1f1',\r\n    borderRadius: '8px',\r\n    boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\r\n  },\r\n  buttonGroup: {\r\n    display: 'flex',\r\n    gap: '0.5rem',\r\n    marginTop: '0.75rem',\r\n  },\r\n  button: {\r\n    padding: '0.5rem 1rem',\r\n    border: 'none',\r\n    color: '#fff',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default Orders;\r\n","// src/components/Navbar.js\nimport React, { useState, useEffect } from 'react';\nimport {\n  FaBars,\n  FaTimes,\n  FaSearch,\n  FaShoppingCart,\n  FaUser,\n  FaEnvelope\n} from 'react-icons/fa';\nimport { useNavigate } from 'react-router-dom';\nimport { db } from '../firebase';\nimport { collection, query, where, getDocs, orderBy } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\n\nconst Navbar = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [companies, setCompanies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const navigate = useNavigate();\n  const auth = getAuth();\n  const user = auth.currentUser;\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (!user) return;\n      try {\n        const q = query(\n          collection(db, 'webchat'),\n          where('receiverId', '==', user.uid),\n          orderBy('time', 'desc')\n        );\n        await getDocs(q); // Not used for display in navbar currently\n      } catch (err) {\n        console.error('Error fetching messages:', err);\n      }\n    };\n    fetchMessages();\n  }, [user]);\n\n  const handleSearch = async (e) => {\n    const qText = e.target.value;\n    setSearchQuery(qText);\n\n    if (!qText) {\n      setCompanies([]);\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const q = query(\n        collection(db, 'postorder'),\n        where('businessname', '>=', qText),\n        where('businessname', '<=', qText + '\\uf8ff')\n      );\n      const snap = await getDocs(q);\n      setCompanies(snap.docs.map(doc => ({ id: doc.id, ...doc.data() })));\n    } catch (err) {\n      console.error('Error fetching companies:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSelect = (company) => {\n    navigate(`/company/${company.id}`);\n    setSearchQuery('');\n    setCompanies([]);\n    setMenuOpen(false);\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-main\">\n        <div className=\"nav-left\">\n          <div className=\"navbar-logo\" onClick={() => navigate('/home')}>PlanOra</div>\n        </div>\n\n        <div className=\"nav-center\">\n          <div className=\"navbar-search\">\n            <FaSearch className=\"search-icon\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search...\"\n              value={searchQuery}\n              onChange={handleSearch}\n            />\n            {searchQuery && (\n              <div className=\"search-results\">\n                {loading ? (\n                  <div className=\"loading\">Loading...</div>\n                ) : companies.length ? (\n                  companies.map((c) => (\n                    <div\n                      key={c.id}\n                      className=\"result-item\"\n                      onClick={() => handleSelect(c)}\n                    >\n                      {c.businessname}\n                    </div>\n                  ))\n                ) : (\n                  <div className=\"no-results\">No matches found</div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"nav-right\">\n          <ul className={`nav-links ${menuOpen ? 'active' : ''}`}>\n            <li onClick={() => { navigate('/home'); setMenuOpen(false); }}>Home</li>\n            <li onClick={() => { navigate('/orders'); setMenuOpen(false); }}>Orders</li>\n            <li onClick={() => { navigate('/post-order'); setMenuOpen(false); }}>Post Order</li>\n            <li onClick={() => { navigate('/profile'); setMenuOpen(false); }}><FaUser /> Profile</li>\n            <li onClick={() => { navigate('/messages'); setMenuOpen(false); }}><FaEnvelope /> Messages</li>\n            <li onClick={() => { navigate('/cart'); setMenuOpen(false); }}><FaShoppingCart /> Cart</li>\n          </ul>\n        </div>\n\n        <div className=\"hamburger\" onClick={() => setMenuOpen(prev => !prev)}>\n          {menuOpen ? <FaTimes /> : <FaBars />}\n        </div>\n      </div>\n\n      <style>{`\n        * {\n          box-sizing: border-box;\n          margin: 0;\n          padding: 0;\n        }\n        .navbar {\n          background: #003f66;\n          color: #fff;\n          padding: 0.5rem 1rem;\n          position: sticky;\n          top: 0;\n          z-index: 1000;\n        }\n        .navbar-main {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          flex-wrap: wrap;\n        }\n\n        .nav-left {\n          flex: 1;\n        }\n\n        .nav-center {\n          flex: 2;\n          display: flex;\n          justify-content: center;\n        }\n\n        .nav-right {\n          flex: 2;\n          display: flex;\n          justify-content: flex-end;\n        }\n\n        .navbar-logo {\n          font-size: 1.5rem;\n          font-weight: bold;\n          cursor: pointer;\n        }\n\n        .navbar-search {\n          position: relative;\n          width: 100%;\n          max-width: 400px;\n          background: rgba(255,255,255,0.2);\n          border-radius: 20px;\n          display: flex;\n          align-items: center;\n          padding: 0.3rem 0.75rem;\n        }\n\n        .navbar-search input {\n          flex: 1;\n          background: transparent;\n          border: none;\n          color: #fff;\n          margin-left: 0.5rem;\n          font-size: 0.9rem;\n          outline: none;\n        }\n\n        .search-icon {\n          color: #ddd;\n        }\n\n        .search-results {\n          position: absolute;\n          top: 110%;\n          left: 0;\n          width: 100%;\n          background: #fff;\n          color: #333;\n          border-radius: 0 0 10px 10px;\n          box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n          max-height: 200px;\n          overflow-y: auto;\n          z-index: 1001;\n        }\n\n        .result-item, .loading, .no-results {\n          padding: 0.5rem;\n          border-bottom: 1px solid #eee;\n          cursor: pointer;\n        }\n\n        .result-item:hover {\n          background: #f0f0f0;\n        }\n\n        .hamburger {\n          display: none;\n          font-size: 1.5rem;\n          color: #fff;\n          cursor: pointer;\n        }\n\n        .nav-links {\n          list-style: none;\n          display: flex;\n          gap: 1.5rem;\n          align-items: center;\n        }\n\n        .nav-links li {\n          cursor: pointer;\n          padding: 0.5rem;\n          border-radius: 6px;\n          transition: background 0.2s;\n          display: flex;\n          align-items: center;\n          gap: 0.3rem;\n        }\n\n        .nav-links li:hover {\n          background: rgba(255, 255, 255, 0.2);\n        }\n\n        @media (max-width: 768px) {\n          .nav-center {\n            order: 3;\n            width: 100%;\n            margin-top: 10px;\n          }\n\n          .nav-right {\n            width: 100%;\n            justify-content: center;\n          }\n\n          .nav-links {\n            display: ${menuOpen ? 'flex' : 'none'};\n            flex-direction: column;\n            width: 100%;\n            margin-top: 1rem;\n          }\n\n          .hamburger {\n            display: block;\n          }\n        }\n      `}</style>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"],"names":["styles","container","padding","margin","header","fontSize","marginBottom","color","ordersList","display","flexDirection","gap","orderCard","backgroundColor","borderRadius","boxShadow","buttonGroup","marginTop","button","border","cursor","Orders","orders","setOrders","useState","loading","setLoading","user","getAuth","currentUser","handleUpdateStatus","async","orderId","status","orderRef","doc","db","updateDoc","prev","map","order","id","err","console","error","useEffect","q","query","collection","where","uid","results","getDocs","docs","data","log","length","fetchOrders","_jsxs","style","children","_jsx","Navbar","name","mobilenumber","location","dateofevent","onClick","disabled","searchQuery","setSearchQuery","companies","setCompanies","menuOpen","setMenuOpen","navigate","useNavigate","orderBy","fetchMessages","className","FaSearch","type","placeholder","value","onChange","qText","e","target","snap","c","businessname","FaUser","FaEnvelope","FaShoppingCart","FaTimes","FaBars"],"sourceRoot":""}